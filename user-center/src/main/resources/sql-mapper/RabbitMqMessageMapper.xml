<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanggy.user.mapper.RabbitMqMessageMapper">
    <resultMap id="rabbitMsgMap" type="com.yanggy.user.entity.RabbitMqMessage">
        <result column="id" property="messageId" jdbcType="VARCHAR"/>
        <result column="message" property="message" jdbcType="VARCHAR"/>
        <result column="exchange" property="exchange" jdbcType="VARCHAR"/>
        <result column="routing_key" property="routingKey" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_processed" property="isProcessed" jdbcType="INTEGER"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="addMessage" parameterType="com.yanggy.user.entity.RabbitMqMessage">
        insert into rabbit_mq_message(id, message,exchange, routing_key, type) VALUES (
          #{messageId},#{message},#{exchange},#{routingKey},#{type}
        )
    </insert>

    <select id="getMessages" parameterType="com.yang.cloud.param.RabbitMqMsgParam" resultMap="rabbitMsgMap">
        select id, message, exchange,routing_key,type,create_time,update_time,is_Processed
        from rabbit_mq_message
        <where>
            is_processed = #{isProcessed}
            and type = #{type}

            limit #{offset}, #{pageSize}
        </where>
    </select>

    <update id="updateMsgStatus" parameterType="com.yang.cloud.param.RabbitMqMsgParam">
        <if test="id != null">
            update rabbit_mq_message set is_processed = 1 where id = #{id}
        </if>
    </update>
</mapper>