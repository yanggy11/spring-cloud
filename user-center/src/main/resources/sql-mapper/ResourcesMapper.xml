<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanggy.user.mapper.ResourcesMapper">
    <resultMap id="resourcesMap" type="com.yanggy.user.entity.Resources">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="resource" property="resource" jdbcType="VARCHAR"/>
        <result column="resourceName" property="resourceName" jdbcType="VARCHAR"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getAllRolesInpage" resultMap="resourcesMap">
        select id, resource, resourceName, create_time, update_time, delete_flag from resources
        order by id
        limit #{offset}, #{size}
    </select>

    <select id="countRoutes" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(id) from resources
        <where>
            <if test="null != parentId">
                parent_id = #{parentId}
            </if>
        </where>
    </select>

    <insert id="addRole" parameterType="com.yanggy.user.entity.Resources">
        insert into resources (resource,resourceName, parent_id) values(#{resource},#{resourceName}, #{parentId})
    </insert>
    <update id="editRole" parameterType="com.yanggy.user.entity.Resources">
        update resources set resource = #{resource},resourceName = #{resourceName}, update_time = current_time() where id = #{id}
    </update>
    <delete id="deleteRole" parameterType="java.lang.Long">
        DELETE from resources where id = #{roleId}
    </delete>
    <delete id="deleteRoles" parameterType="java.util.List">
        <if test="list != null and list.size > 0">
            DELETE from resources
            <where>
                id in
                <foreach collection="list" close=")" open="(" item="item" separator=",">
                    #{item}
                </foreach>
            </where>
        </if>
    </delete>

    <delete id="deleteUserRole" parameterType="java.lang.Long">
        delete from user_role where role_id = #{roleId}
    </delete>

    <select id="getRoleById" parameterType="java.lang.Long" resultMap="resourcesMap">
        select id, resource, resourceName from resources where id = #{roleId}
    </select>

    <select id="getAllRoles" resultMap="resourcesMap">
        select id, resource, resourceName, parent_id from resources
    </select>

    <select id="getResourcesByRole" parameterType="java.lang.Long" resultMap="resourcesMap">
        select rr.resources_id as id, r.parent_id, r.resource, r.resourceName
        from role_resources rr
        left join resources r on rr.role_id = r.id
        <where>
            rr.role_id = #{roleId}
        </where>
    </select>
</mapper>